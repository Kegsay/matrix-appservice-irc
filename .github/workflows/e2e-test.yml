name: E2E tests

on:
  push:
    branches: ["develop", "release-*"]
  pull_request:
  workflow_dispatch:

jobs:
  build-synapse:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout synapse
        uses: actions/checkout@v3
        with:
          repository: matrix-org/synapse
          ref: master
      - name: Get synapse git sha
        id: gitsha
        run: echo '::set-output name=sha::'`git rev-parse --short HEAD`
      - name: Cache complement-synapse image
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: /tmp/img-synapse.tar
          key: ${{ runner.os }}-complement-synapse-${{ steps.gitsha.outputs.sha }}
      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: Build images
        run: |
          # enable buildkit for the docker builds
          export DOCKER_BUILDKIT=1
          docker build -f docker/Dockerfile-workers -t matrixdotorg/synapse-workers:latest .
          docker build -f docker/complement/Dockerfile -t complement-synapse:latest docker/complement
          docker image save complement-synapse:latest > /tmp/img-synapse.tar

  inspircd-test:
    runs-on: ubuntu-latest
    needs:
      - build-synapse
    services:
      ircd:
        image: inspircd/inspircd-docker
        env:
          # Don't check domain against blacklists
          INSP_ENABLE_DNSBL: no
        ports:
          - 6667:6667
    steps:
      - name: "Set Go Version"
        run: |
          echo "$GOROOT_1_17_X64/bin" >> $GITHUB_PATH
          echo "~/go/bin" >> $GITHUB_PATH
      - name: Cache complement-synapse image
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: /tmp/img-synapse.tar
          key: ${{ runner.os }}-complement-synapse-${{ steps.gitsha.outputs.sha }}
      - name: Load images
        run: |
          docker load --input /tmp/img-synapse.tar
      - name: Checkout matrix-org/complement
        uses: actions/checkout@v3
        with:
          repository: matrix-org/complement
          path: complement
      - name: "Install Complement Dependencies"
        run: |
          sudo apt-get update && sudo apt-get install -y libolm3 libolm-dev
      - name: "Build homerunner"
        run: |
          go build ./cmd/homerunner
          cd ..
      - name: Checkout matrix-appservice-irc
        uses: actions/checkout@v3
        with:
          path: matrix-appservice-irc
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Run Homerunner tests
        run: |
          npm ci
          ../complement/homerunner &
          bash -ic 'npm run-script test:e2e'
